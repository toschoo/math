module Fib
where

  import           Data.List (intercalate,sort)
  import           Debug.Trace (trace)

  ------------------------------------------------------------------------
  -- Naive fibonacci
  ------------------------------------------------------------------------
  fib :: Integer -> Integer
  fib 0 = 0
  fib 1 = 1
  fib n = fib (n-2) + fib (n-1)

  ------------------------------------------------------------------------
  -- The Golden Ratio
  ------------------------------------------------------------------------
  phi :: Double
  phi = 0.5 * (1 + sqrt 5)

  ------------------------------------------------------------------------
  -- Conjugate of the Golden Ratio
  ------------------------------------------------------------------------
  phi' :: Double
  phi' = 1 - phi

  ------------------------------------------------------------------------
  -- Compute the golden ratio for a
  ------------------------------------------------------------------------
  golden :: Double -> Double
  golden a = phi*a

  ------------------------------------------------------------------------
  -- Integers around the nth fibonacci number
  ------------------------------------------------------------------------
  fibApx :: Integer -> (Integer, Integer)
  fibApx n = let n' = fromIntegral n 
              in (floor   $ phi^(n'-2), 
                  ceiling $ phi^(n'-1))

  ------------------------------------------------------------------------
  -- Smart fibonacci
  ------------------------------------------------------------------------
  fi :: Integer -> Integer
  fi n = round (phi^n/sqrt 5)

  ------------------------------------------------------------------------
  -- Complete formula
  ------------------------------------------------------------------------
  fi2 :: Integer -> Integer
  fi2 n = round ((phi^n - phi'^n)/sqrt 5)

  ------------------------------------------------------------------------
  -- Double
  ------------------------------------------------------------------------
  fir :: Integer -> Double 
  fir n = (phi^n)/sqrt 5

  ------------------------------------------------------------------------
  -- Double
  ------------------------------------------------------------------------
  fir2 :: Integer -> Double 
  fir2 n = (phi^n - phi'^n)/sqrt 5

  ------------------------------------------------------------------------
  -- Double
  ------------------------------------------------------------------------
  fratio :: Integer -> Double
  fratio n = np / nn
    where np = fromInteger (fi (n+1))
          nn = fromInteger (fi n)

  ------------------------------------------------------------------------
  -- Some experiments with the generating function
  ------------------------------------------------------------------------
  g :: Double -> Double
  g x = x / (1 - x - x^2)

  g' :: Double -> Double
  g' x = (1/(sqrt 5)) * (1/(1-x*phi) - 1/(1-x*phi'))

  ------------------------------------------------------------------------
  -- Write a program that shows the coefficients for
  -- phi^n and phi'^n, such that
  -- phi x phi = (3 + b) / 2, etc. for b = sqrt(5)
  ------------------------------------------------------------------------


